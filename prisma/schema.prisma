datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  role      String    
  password  String    @unique
  createdAt DateTime  @default(now())
  Account   Account[]
  Session   Session[]
}

model Company {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  password  String    @unique
  createdAt DateTime  @default(now())
  Account   Account[]
  Session   Session[]
}



model Account {
  id                String  @id @default(cuid())
  userId            String // Mantendo o tipo como String para corresponder ao ID do User
  companyId         String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String // Mantendo o tipo como String para corresponder ao ID do User
  companyId    String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  company      Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

